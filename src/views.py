from typing import List

from src.models import Book
from src.utils import generate_id, save_data, print_book


def add_book(data: List[Book]) -> None:
    title = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏: ").strip()

    if any(book.title.lower() == title.lower() for book in data):
        print("\n‚ö† –û—à–∏–±–∫–∞: –ö–Ω–∏–≥–∞ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n")
        return

    author = input("–í–≤–µ–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∞ –∫–Ω–∏–≥–∏: ").strip()
    year_input = input("–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è –∫–Ω–∏–≥–∏: ").strip()

    if not year_input.isdigit():
        print("\n‚ö† –û—à–∏–±–∫–∞: –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.\n")
        return

    year = int(year_input)
    new_id = generate_id(data)
    new_book = Book(id=new_id, title=title, author=author, year=year)
    data.append(new_book)
    save_data(data)
    print("\n‚úÖ –ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!\n")


def delete_book(data: List[Book]) -> None:
    try:
        book_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∫–Ω–∏–≥–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ").strip())
        book_to_remove = next((book for book in data if book.id == book_id), None)
        if book_to_remove:
            data.remove(book_to_remove)
            save_data(data)
            print("\n‚úÖ –ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!\n")
        else:
            print("\n‚ö† –û—à–∏–±–∫–∞: –∫–Ω–∏–≥–∞ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n")
    except ValueError:
        print("\n‚ö† –û—à–∏–±–∫–∞: ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.\n")


def search_book(data: List[Book]) -> None:
    criteria = input("–í–≤–µ–¥–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–π –ø–æ–∏—Å–∫–∞ (title, author, year): ").strip().lower()
    query = input("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞: ").strip()

    if criteria == "year" and not query.isdigit():
        print("\n‚ö† –û—à–∏–±–∫–∞: –≥–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.\n")
        return

    results = [
        book for book in data
        if (criteria == "title" and book.title.lower() == query.lower())
        or (criteria == "author" and book.author.lower() == query.lower())
        or (criteria == "year" and str(book.year) == query)
    ]

    if results:
        print("\nüîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏:")
        print("=" * 60)
        for book in results:
            print_book(book)
        print("=" * 60)
    else:
        print("\n‚ö† –ö–Ω–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.\n")


def change_status(data: List[Book]) -> None:
    try:
        book_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∫–Ω–∏–≥–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: ").strip())
        new_status = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å (–≤ –Ω–∞–ª–∏—á–∏–∏, –≤—ã–¥–∞–Ω–∞): ").strip()
        if new_status not in ["–≤ –Ω–∞–ª–∏—á–∏–∏", "–≤—ã–¥–∞–Ω–∞"]:
            print("\n‚ö† –û—à–∏–±–∫–∞: —Å—Ç–∞—Ç—É—Å –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ '–≤ –Ω–∞–ª–∏—á–∏–∏' –∏–ª–∏ '–≤—ã–¥–∞–Ω–∞'.\n")
            return
        book_to_update = next((book for book in data if book.id == book_id), None)
        if book_to_update:
            book_to_update.status = new_status
            save_data(data)
            print("\n‚úÖ –°—Ç–∞—Ç—É—Å –∫–Ω–∏–≥–∏ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!\n")
        else:
            print("\n‚ö† –û—à–∏–±–∫–∞: –∫–Ω–∏–≥–∞ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n")
    except ValueError:
        print("\n‚ö† –û—à–∏–±–∫–∞: ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.\n")


def display_books(data: List[Book]) -> None:
    if data:
        print("\nüìö –°–ø–∏—Å–æ–∫ –∫–Ω–∏–≥:")
        print("=" * 60)
        for book in data:
            print_book(book)
        print("=" * 60)
    else:
        print("\n‚ö† –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø—É—Å—Ç–∞.\n")
